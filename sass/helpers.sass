/*
  gonzo-tools
  ============================== */

// Helpers
@function __listToString($list, $glue: '', $is-nested: false)
  $result: null
  @for $i from 1 through length($list)
    $e: nth($list, $i)
    @if type-of($e) == list
      $result: unquote("#{$result}#{to-string($e, $glue, true)}")
    @else
      $result: if($i != length($list) or $is-nested, unquote("#{$result}#{$e}#{$glue}"), unquote("#{$result}#{$e}"))
  @return $result

@function __stripUnit($number)
  @if type-of($number) == 'number' and not unitless($number)
    @return $number / ($number * 0 + 1)
  @return $number

@function __appendToImageFilename($filename, $value)
  $exts: '.png' '.jpg' '.jpeg' '.bmp' '.gif' '.svg'
  $index: null
  $extension: null
  @each $ext in $exts
    @if str-index($filename, $ext)
      $index: str-index($filename, $ext)
      $extension: $ext
  @if $index and $extension
    $newFilename: str-insert($filename, $value, $index)
    @return $newFilename
  @else
    @error 'Appending to filename \'#{$filename}\' failed.'

@function __toLength($value, $unit)
  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax)
  @if not index(map-keys($units), $unit)
    @error 'Invalid unit \'#{$unit}\'.'
  @return $value * map-get($units, $unit)

@function __toNumber($value)
  @if type-of($value) == 'number'
    @return $value
  @else if type-of($value) != 'string'
    @error 'Value for __toNumber() should be a number or a string.'
  $result: 0
  $digits: 0
  $minus: str-slice($value, 1, 1) == '-'
  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9)
  @for $i from if($minus, 2, 1) through str-length($value)
    $character: str-slice($value, $i, $i)
    @if not (index(map-keys($numbers), $character) or $character == '.')
      @return __toLength(if($minus, -$result, $result), str-slice($value, $i))
    @if $character == '.'
      $digits: 1
    @else if $digits == 0
      $result: $result * 10 + map-get($numbers, $character)
    @else
      $digits: $digits * 10
      $result: $result + map-get($numbers, $character) / $digits
  @return if($minus, -$result, $result)
